local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "DucWare ‚Äî Anime Saga",
    Icon = 0,
    LoadingTitle = "Wait a minute, the script is loading",
    LoadingSubtitle = "by DucWare",
    Theme = "Amethyst",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "DucWare",
        FileName = "DucWareZ"
    },
    Discord = {
        Enabled = true,
        Invite = "PnHj485p",
        RememberJoins = false
    },
    KeySystem = true,
    KeySettings = {
        Title = "Get Key",
        Subtitle = "Key System",
        Note = "Key: DucWare",
        FileName = "Key",
        SaveKey = true,
        Key = {"DucWare"}
    }
})

Rayfield:Notify({
    Title = "Enjoy",
    Content = "Have Fun :)",
    Duration = 5,
    Image = "number"
})

local LobbyTab = Window:CreateTab("Lobby", 4483362458)
local GameTab = Window:CreateTab("Game", 4483362458)

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

local autoFarm = false

-- T·∫°o toggle b·∫≠t/t·∫Øt auto farm
GameTab:CreateToggle({
    Name = "Bay ƒë√°nh qu√°i (Auto)",
    CurrentValue = false,
    Callback = function(Value)
        autoFarm = Value

        -- Th√¥ng b√°o b·∫≠t/t·∫Øt
        Rayfield:Notify({
            Title = autoFarm and "üåÄ Auto Farm ƒê√£ B·∫≠t" or "‚õî Auto Farm ƒê√£ T·∫Øt",
            Content = autoFarm and "ƒêang bay ƒë√°nh qu√°i..." or "D·ª´ng farm.",
            Duration = 3
        })

        -- B·∫Øt ƒë·∫ßu auto farm khi b·∫≠t toggle
        while autoFarm do
            -- L·∫•y danh s√°ch qu√°i trong m√¥i tr∆∞·ªùng hi·ªán t·∫°i
            local mobs = workspace:WaitForChild("Enemy"):GetChildren()
            local foundMob = false

            for _, mob in pairs(mobs) do
                -- Ki·ªÉm tra n·∫øu mob c√≥ HumanoidRootPart v√† Humanoid
                if mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                    foundMob = true  -- C√≥ qu√°i v·∫≠t t·ªìn t·∫°i
                    local mobHitbox = mob:FindFirstChild("HumanoidRootPart")
                    if mobHitbox then
                        -- Di chuy·ªÉn ƒë·∫øn hitbox c·ªßa mob
                        local targetPosition = mobHitbox.Position + Vector3.new(0, 5, 0) -- T·∫°o v·ªã tr√≠ bay l√™n ph√≠a tr√™n qu√°i v·∫≠t
                        local distance = (HumanoidRootPart.Position - targetPosition).magnitude
                        local moveTime = math.max(distance / 100, 1) -- T√≠nh th·ªùi gian di chuy·ªÉn d·ª±a tr√™n kho·∫£ng c√°ch
                        
                        -- T·∫°o tween di chuy·ªÉn nh√¢n v·∫≠t ƒë·∫øn qu√°i v·∫≠t
                        local TweenService = game:GetService("TweenService")
                        local goal = {CFrame = CFrame.new(targetPosition)}
                        local tweenInfo = TweenInfo.new(moveTime, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1, false)
                        local tween = TweenService:Create(HumanoidRootPart, tweenInfo, goal)

                        tween:Play()

                        -- ƒê·ª£i cho ƒë·∫øn khi nh√¢n v·∫≠t ƒë·∫øn v·ªã tr√≠ qu√°i v·∫≠t
                        task.wait(moveTime)

                        -- Gi·∫£ l·∫≠p ƒë√°nh (s·ª≠a theo c√°ch game y√™u c·∫ßu)
                        local attackRemote = ReplicatedStorage:FindFirstChild("Event") and ReplicatedStorage.Event:FindFirstChild("Attack")
                        if attackRemote then
                            attackRemote:FireServer(mob)  -- G·ªçi RemoteEvent ƒë·ªÉ t·∫•n c√¥ng
                        else
                            print("Kh√¥ng t√¨m th·∫•y RemoteEvent t·∫•n c√¥ng.")
                        end

                        -- ƒê·ª£i m·ªôt ch√∫t r·ªìi ƒë√°nh qu√°i kh√°c
                        task.wait(1)
                    end
                end
            end

            -- N·∫øu kh√¥ng c√≤n qu√°i, ch·ªù m·ªôt ch√∫t v√† ki·ªÉm tra l·∫°i
            if not foundMob then
                Rayfield:Notify({
                    Title = "‚úÖ T·∫•t c·∫£ qu√°i v·∫≠t ƒë√£ b·ªã ƒë√°nh b·∫°i.",
                    Content = "ƒêang t√¨m qu√°i m·ªõi...",
                    Duration = 3
                })
                task.wait(5)  -- Ch·ªù 5 gi√¢y tr∆∞·ªõc khi t√¨m ki·∫øm l·∫°i
            end

            -- ƒê·ª£i m·ªôt ch√∫t r·ªìi ti·∫øp t·ª•c v√≤ng l·∫∑p
            task.wait(1)
        end
    end
})
