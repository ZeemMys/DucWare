local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "DucWare",
    SubTitle = "by Duck",
    TabWidth = 160,
    Size = UDim2.fromOffset(570, 440),
    Acrylic = true,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

local Tabs = {
    Lobby = Window:AddTab({ Title = "Lobby", Icon = "box" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

------------- LOBBY TAB -------------
-- Bắt đầu setup AutoSell trong tab Lobby
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local SellEvent = ReplicatedStorage.Event.ItemIven.Sell

-- Biến lưu giá trị
local selectedRarity = nil
local autoSellToggle = nil

-- Dropdown chọn độ hiếm
Tabs.Lobby:AddDropdown("AutoSellDropdown", {
    Title = "Chọn độ hiếm để Auto Sell",
    Values = { "Rare", "Epic", "Legendary", "Mythical" },
    Multi = false,
    Default = "Rare",
    Callback = function(value)
        selectedRarity = value
        print("[Dropdown] Đã chọn độ hiếm:", selectedRarity)
    end
})

-- Toggle bật/tắt auto sell
autoSellToggle = Tabs.Lobby:AddToggle("AutoSellToggle", {
    Title = "Bật Auto Sell",
    Default = false,
    Callback = function(isEnabled)
        if isEnabled then
            print("[Toggle] Bật Auto Sell:", selectedRarity)
            if selectedRarity then
                SellEvent:FireServer(selectedRarity)
                print("[FIRE] Đã gửi yêu cầu bán unit có độ hiếm:", selectedRarity)
            else
                warn("Bạn chưa chọn độ hiếm để auto sell!")
            end
        else
            print("[Toggle] Tắt Auto Sell")
        end
    end
})

------------- SETTINGS TAB -------------

local Colorpicker = Tabs.Settings:AddColorpicker("Colorpicker", {
    Title = "Colorpicker",
    Default = Color3.fromRGB(96, 205, 255)
})
Colorpicker:OnChanged(function()
    print("Colorpicker changed:", Colorpicker.Value)
end)
Colorpicker:SetValueRGB(Color3.fromRGB(0, 255, 140))

local TColorpicker = Tabs.Settings:AddColorpicker("TransparencyColorpicker", {
    Title = "Colorpicker (Transparent)",
    Description = "Can change transparency.",
    Transparency = 0,
    Default = Color3.fromRGB(96, 205, 255)
})
TColorpicker:OnChanged(function()
    print("TColorpicker changed:", TColorpicker.Value, "Transparency:", TColorpicker.Transparency)
end)

local Keybind = Tabs.Settings:AddKeybind("Keybind", {
    Title = "KeyBind",
    Mode = "Toggle", -- Always, Toggle, Hold
    Default = "LeftControl",
    Callback = function(Value)
        print("Keybind clicked!", Value)
    end,
    ChangedCallback = function(New)
        print("Keybind changed!", New)
    end
})

Keybind:OnClick(function()
    print("Keybind clicked:", Keybind:GetState())
end)

Keybind:OnChanged(function()
    print("Keybind changed:", Keybind.Value)
end)

task.spawn(function()
    while true do
        task.wait(1)
        if Fluent.Unloaded then break end
        if Keybind:GetState() then
            print("Keybind is being held down")
        end
    end
end)

Keybind:SetValue("MB2", "Hold")
